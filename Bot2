import requests
import time

# 🔹 استبدل التوكن الخاص بك هنا
API_TOKEN = "7701661902:AAFXVRjjwts5eL1f_wcYuy21nJUWK-HTxbQ"
URL = f"https://api.telegram.org/bot{API_TOKEN}/"

# 🔹 لتخزين آخر تحديث تم معالجته
last_update_id = 0

def get_updates():
    """ جلب التحديثات من تيليجرام """
    response = requests.get(URL + "getUpdates", params={"timeout": 10})
    return response.json()

def send_message(chat_id, text, reply_markup=None):
    """ إرسال رسالة مع أزرار اختيارية """
    data = {"chat_id": chat_id, "text": text, "parse_mode": "Markdown"}
    if reply_markup:
        data["reply_markup"] = reply_markup
    requests.post(URL + "sendMessage", json=data)

def create_main_menu():
    """ إنشاء قائمة رئيسية تحتوي على أزرار """
    keyboard = {
        "inline_keyboard": [
            [{"text": "📜 قائمة القوانين", "callback_data": "rules"}],
            [{"text": "📂 نماذج الاختبارات", "callback_data": "tests"}],
            [{"text": "🔹 معلومات عن الكلية", "callback_data": "info"}]
        ]
    }
    return keyboard

def process_updates(updates):
    """ معالجة الرسائل والأزرار """
    global last_update_id
    for update in updates.get("result", []):
        if update["update_id"] > last_update_id:
            last_update_id = update["update_id"]

            if "message" in update:
                message = update["message"]
                chat_id = message["chat"]["id"]
                text = message.get("text", "")

                if text == "/start":
                    send_message(chat_id, "مرحبًا بك! 👋\nاختر من القائمة:", reply_markup=create_main_menu())
                else:
                    send_message(chat_id, "❌ أمر غير معروف. استخدم /start")

            elif "callback_query" in update:
                query = update["callback_query"]
                chat_id = query["message"]["chat"]["id"]
                data = query["data"]

                if data == "rules":
                    send_message(chat_id, "📜 هذه قائمة القوانين:\n1️⃣ الالتزام بالزي الرسمي\n2️⃣ احترام المواعيد\n3️⃣ المحافظة على النظافة")
                elif data == "tests":
                    send_message(chat_id, "📂 اختر النموذج الذي تريده:", reply_markup=create_tests_menu())
                elif data == "info":
                    send_message(chat_id, "🏫 معلومات عن الكلية:\nكلية XYZ توفر تعليمًا عالي الجودة في مختلف التخصصات.")
                
                # إرسال رسالة فارغة لإغلاق زر التحميل
                requests.post(URL + "answerCallbackQuery", json={"callback_query_id": query["id"]})

def create_tests_menu():
    """ إنشاء قائمة فرعية لاختيار الاختبارات """
    keyboard = {
        "inline_keyboard": [
            [{"text": "📑 اختبار 2023", "callback_data": "test_2023"}],
            [{"text": "📑 اختبار 2022", "callback_data": "test_2022"}],
            [{"text": "🔙 العودة إلى القائمة الرئيسية", "callback_data": "main_menu"}]
        ]
    }
    return keyboard

def process_callback_query(query):
    """ معالجة الضغط على الأزرار """
    chat_id = query["message"]["chat"]["id"]
    data = query["data"]

    if data == "test_2023":
        send_message(chat_id, "📄 رابط اختبار 2023: [اضغط هنا](https://example.com/2023-test)")
    elif data == "test_2022":
        send_message(chat_id, "📄 رابط اختبار 2022: [اضغط هنا](https://example.com/2022-test)")
    elif data == "main_menu":
        send_message(chat_id, "🔙 العودة إلى القائمة الرئيسية:", reply_markup=create_main_menu())

    requests.post(URL + "answerCallbackQuery", json={"callback_query_id": query["id"]})

# 🔹 تشغيل البوت
print("✅ البوت قيد التشغيل...")
while True:
    updates = get_updates()
    process_updates(updates)
    time.sleep(2)  # 🔄 التحديث كل ثانيتين
